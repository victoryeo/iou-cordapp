This CorDapp is to model IOUs on the blockchain. Each IOU – short for “I O(we) (yo)U” – will record the fact that one node owes another node a certain amount. 

There are three main parts in the Corda app.
- state : the facts that are written to the ledger.
- contract : the constraints governing how states of a given type can evolve over time
- flow : the procedures for carrying out specific ledger updates

1) Build and deploy the nodes
In Ubuntu, run the command to build the code and deploy the nodes
./gradlew clean deployNodes
Running deployNodes will build the nodes under build/nodes.

2) Starting the nodes:
In Ubuntu, start the nodes by running the following command from the root of the project:
./build/nodes/runnodes

3) Interacting with the nodes:

In PartyA terminal, run the command: 
start IOUFlow iouValue: 99, otherParty: "O=PartyB,L=New York,C=US"
to create an IOU with PartyB. This single command will cause PartyA and PartyB to automatically agree an IOU. 
(Note: The argument has to be "O=PartyB,L=New York,C=US" because the value is hardcoded in build.gradle)

In PartyA or PartyB terminal, run the command:
run vaultQuery contractStateType: com.template.states.IOUState
This command checks the contents of each node’s vault.
